{"version":3,"sources":["firebase.js","contexts/FirebaseContext.js","components/Header.jsx","components/Footer.jsx","components/Login.jsx","modules/countries.js","modules/universities.js","components/Register.jsx","components/Home.jsx","components/ReviewAndSubmit.jsx","components/MainForm.jsx","pages/WelcomePage.jsx","pages/App.jsx","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getFirestore","getAuth","FirebaseContext","getStorage","React","createContext","useAuth","useContext","FirebaseProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","Provider","Header","navigate","useNavigate","a","alert","className","role","aria-label","style","marginLeft","href","fontWeight","fontSize","aria-expanded","data-target","aria-hidden","id","to","pathname","icon","faSignOut","onClick","Footer","year","Date","getFullYear","Login","viewPassword","setViewPassword","state","setState","error","setError","e","preventDefault","length","then","code","onInputChange","target","name","marginTop","marginRight","padding","border","borderRadius","class","color","required","type","placeholder","onChange","faEnvelope","faLock","position","top","right","faEye","disabled","alignSelf","countries","countryList","getData","map","c","label","universities","axios","get","params","response","renderCollegeList","Register","step","setStep","cpassword","success","setSuccess","renderStepperButton","title","stp","display","flexDirection","justifyContent","alignItems","zIndex","width","height","textAlign","backgroundColor","marginBottom","fa1","fa2","fa3","renderFormBody","console","log","Home","queryString","window","location","search","urlParams","URLSearchParams","src","alt","srcset","ReviewAndSubmit","form1Data","filesSelected","coverLetter","MainForm","submissionType","setSubmissionType","data","abstract","addMaterial","errors","isCompleted","forms","setForms","decideStepperButtonColor","i","decideStepperButtonIcon","faCheck","fa4","faXmark","orcid","institution","author","setAuthor","authorsList","setAuthorsList","onInputChangeAuthor","options","setOptions","addedKeywords","setAddedKeywords","currentSelectVal","setCurrentSelectVal","toggleAuthorModal","setToggleAuthorModal","addErrorsToFormsState","errs","scrollTo","left","behavior","setErrorsToNull","push","isConfirmed1","isConfirmed2","isConfirmed3","handleInputs","cursor","fileTypeSelect","setFileTypeSelect","Array","fill","setFilesSelected","fileUploadLoading","checkIfAllFilesSelected","handleFiles","file","toggleFundingModal","setToggleFundingModal","findfunder","grantrecep","awardnumber","funder","setFunder","fundersList","setFundersList","setCoverLetter","setIsConfirmed1","setIsConfirmed2","setIsConfirmed3","onInputChangeFunder","active","spinner","text","paddingBottom","listStyleType","paddingLeft","paddingRight","rows","isDisabled","item","onCreateOption","newValue","split","forEach","charAt","toUpperCase","slice","filter","el","faAdd","keyword","key","borderBottom","faRemove","confirm","onSubmit","_","accept","faUpload","files","size","today","getMonth","getDate","getHours","getMinutes","getFormattedTimeDate","f","checked","WelcomePage","path","element","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d611835.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n  collection,\n  getFirestore,\n  //   getDocs,\n  //   addDoc,\n  //   doc,\n} from \"firebase/firestore\";\n\nimport { getStorage, ref } from \"firebase/storage\";\n\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAlXZEKJ-OcrLs_n7QEiOi7Ft0MbGdU-q0\",\n  authDomain: \"manuscriptor-89ff4.firebaseapp.com\",\n  projectId: \"manuscriptor-89ff4\",\n  storageBucket: \"manuscriptor-89ff4.appspot.com\",\n  messagingSenderId: \"896627881435\",\n  appId: \"1:896627881435:web:30ea017bbe7bb1ac0163fe\",\n  measurementId: \"G-W7S9FLXN60\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore();\n\nconst auth = getAuth();\n\nconst storage = getStorage(app);\n\nexport {\n  auth,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n  storage,\n  ref,\n};\n\n// const colRef = collection()\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  auth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"../firebase\";\n\nconst FirebaseContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(FirebaseContext);\n}\n\nexport function FirebaseProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  //   function resetPassword(email) {\n  //     return auth.sendPasswordResetEmail(email);\n  //   }\n\n  //   function updateEmail(email) {\n  //     return currentUser.updateEmail(email);\n  //   }\n\n  //   function updatePassword(password) {\n  //     return currentUser.updatePassword(password);\n  //   }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    // resetPassword,\n    // updateEmail,\n    // updatePassword,\n  };\n\n  return (\n    <FirebaseContext.Provider value={value}>\n      {!loading && children}\n    </FirebaseContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOut } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useAuth } from \"../contexts/FirebaseContext\";\n\nfunction Header() {\n  const { currentUser, logout } = useAuth();\n\n  let navigate = useNavigate();\n\n  async function handleLogout() {\n    try {\n      await logout();\n      navigate(\"/login\");\n    } catch {\n      alert(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <nav\n      className=\"navbar has-shadow py-3 is-info\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <a style={{ marginLeft: 15 }} className=\"navbar-item\" href=\"/\">\n          <strong style={{ fontWeight: \"700\", fontSize: 24 }}>\n            MANUSCRIPTOR\n          </strong>\n        </a>\n\n        <a\n          role=\"button\"\n          className=\"navbar-burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        {currentUser && (\n          <div className=\"navbar-start\">\n            <Link to={{ pathname: \"/\" }} className=\"navbar-item\">\n              Home\n            </Link>\n\n            <Link to={{ pathname: \"/authors\" }} className=\"navbar-item\">\n              Authors\n            </Link>\n          </div>\n        )}\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            {currentUser ? (\n              <div className=\"navbar-item has-dropdown is-hoverable\">\n                <a className=\"navbar-link\">Current Logged In Account</a>\n\n                <div className=\"navbar-dropdown\">\n                  <span className=\"navbar-item\">{currentUser.email}</span>\n                  <p className=\"navbar-item\">\n                    <FontAwesomeIcon icon={faSignOut} />\n                    <a onClick={handleLogout} style={{ marginLeft: 5 }}>\n                      Log out\n                    </a>\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <div className=\"buttons\">\n                <Link\n                  to={{ pathname: \"/register\" }}\n                  className=\"button is-info is-light\"\n                >\n                  <strong>Register</strong>\n                </Link>\n                <Link\n                  to={{ pathname: \"/login\" }}\n                  className=\"button is-info is-light\"\n                >\n                  <strong>Log in</strong>\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n\n/*\n<header style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <h1 style={{ fontWeight: \"700\", marginLeft: 20 }}>MANUSCRIPTOR</h1>\n      <div\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <div style={{ color: \"#fff\" }}>Account</div>\n        <div style={{ marginLeft: 10 }}>\n          {currentUser && <button>Log Out</button>}\n        </div>\n        <div style={{ marginLeft: 10 }}>\n          <figure className=\"image is-32x32\">\n            <img\n              className=\"is-rounded\"\n              src=\"https://bulma.io/images/placeholders/32x32.png\"\n            />\n          </figure>\n        </div>\n      </div>\n    </header> */\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <div className=\"footer py-5 has-background-grey-lighter\">\n      <div className=\"container\">\n        <div className=\"content has-text-centered\">\n          <span>Copyright Manuscriptors ⓒ {year}</span>\n          <br />\n          <span>Developed by Roohullah Saqib - MSSE</span>\n          <br />\n          <span>Department of Computer Sciences & Software Engineering</span>\n          <br />\n          <span>International Islamic Universty, Islamabad </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEnvelope, faLock } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { useAuth } from \"../contexts/FirebaseContext\";\r\n\r\nfunction Login() {\r\n  const [viewPassword, setViewPassword] = useState(false);\r\n  const [state, setState] = useState({ email: \"\", password: \"\" });\r\n\r\n  const { email, password } = state;\r\n\r\n  const { login, currentUser } = useAuth();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  async function handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    if (password.length < 6) {\r\n      return setError(\"Passwords must be 6 characters long!\");\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      await login(email, password).then(() => {\r\n        navigate(\"/\");\r\n      });\r\n    } catch (err) {\r\n      switch (err.code) {\r\n        case \"auth/user-not-found\":\r\n          setError(\"User not found!\");\r\n          break;\r\n        case \"auth/wrong-password\":\r\n          setError(\"Provided password is wrong\");\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: 50,\r\n        marginRight: \"30%\",\r\n        marginLeft: \"30%\",\r\n        padding: 35,\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: 20,\r\n      }}\r\n    >\r\n      <div className=\"title\">Login</div>\r\n\r\n      {error.length > 0 && (\r\n        <div className=\"notification is-danger is-light\">{error}</div>\r\n      )}\r\n\r\n      <div className=\"field\">\r\n        <label class=\"label\">\r\n          Email <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n        </label>\r\n        <p className=\"control has-icons-left\">\r\n          <input\r\n            required\r\n            className=\"input\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onInputChange}\r\n          />\r\n          <span className=\"icon is-small is-left\">\r\n            <FontAwesomeIcon icon={faEnvelope} />\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"field\">\r\n        <label class=\"label\">\r\n          Password <span style={{ color: \"red\" }}>*</span>\r\n        </label>\r\n        <p className=\"control has-icons-left has-icons-right\">\r\n          <input\r\n            required\r\n            className=\"input\"\r\n            type={viewPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onInputChange}\r\n          />\r\n          <span className=\"icon is-small is-left\">\r\n            <FontAwesomeIcon icon={faLock} />\r\n          </span>\r\n          <i\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 7,\r\n              right: 10,\r\n              color: viewPassword ? \"black\" : \"#7774\",\r\n            }}\r\n            onClick={() => setViewPassword(!viewPassword)}\r\n          >\r\n            <FontAwesomeIcon icon={faEye} />\r\n          </i>\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"field \">\r\n        <div class=\"control\">\r\n          <Link to={{ pathname: \"/\" }}>Reset Password</Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"field\">\r\n        <p class=\"control is-expanded\">\r\n          <button\r\n            disabled={loading}\r\n            onClick={handleLogin}\r\n            class=\"button is-info\"\r\n          >\r\n            Login\r\n          </button>\r\n        </p>\r\n      </div>\r\n      <div class=\"field\" style={{ marginTop: 50 }}>\r\n        <p class=\"control\">\r\n          <span className=\"block\" style={{ alignSelf: \"flex-end\" }}>\r\n            Don't have an account?{\" \"}\r\n            <Link to={{ pathname: \"/register\" }} href=\"#\">\r\n              Register!\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import countryList from \"react-select-country-list\";\n\nconst countries = countryList()\n  .getData()\n  .map((c) => c.label);\n\nconst findCountryByShortCode = countries;\n\nexport { countries, findCountryByShortCode };\n","// async function getUnis() {\n//   await fetch(\"https://jsonplaceholder.typicode.com/users/1\")\n//     .then((res) => res.json())\n//     .then((uni) => {\n//       return uni;\n//     })\n//     .catch((error) => console.log(error));\n// }\nimport axios from \"axios\";\n\nconst renderCollegeList = async (name) => {\n  const response = await axios.get(`http://universities.hipolabs.com/search`, {\n    params: { name },\n  });\n  return response;\n};\n\nexport const universities = renderCollegeList(\"university\");\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faXmark,\r\n  fa1,\r\n  fa2,\r\n  fa3,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { countries } from \"../modules/countries\";\r\nimport { universities } from \"../modules/universities\";\r\nimport { useAuth } from \"../contexts/FirebaseContext\";\r\n\r\nfunction Register() {\r\n  const [viewPassword, setViewPassword] = useState(false);\r\n  const [step, setStep] = useState(3);\r\n\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n  });\r\n\r\n  const { email, password, cpassword } = state;\r\n\r\n  const { signup } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  async function handleRegister(e) {\r\n    e.preventDefault();\r\n    setSuccess(false);\r\n\r\n    if (password !== cpassword) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n    if (password.length < 6) {\r\n      return setError(\"Passwords must be 6 characters long!\");\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      await signup(email, password).then(() => {\r\n        setSuccess(true);\r\n        setTimeout(() => {\r\n          navigate(\"/login\");\r\n        }, 2000);\r\n      });\r\n    } catch (err) {\r\n      switch (err.code) {\r\n        case \"auth/email-already-in-use\":\r\n          setError(\"Email already in use !\");\r\n          break;\r\n        case \"auth/invalid-password\":\r\n          setError(\"Password Incorrect! It must be 6 character long minimum\");\r\n          break;\r\n        case \"auth/invalid-email\":\r\n          setError(\r\n            \"The provided value for the email user property is invalid!\"\r\n          );\r\n          break;\r\n        default:\r\n          setError(\"Cannot create account!\");\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const renderStepperButton = (title, color, icon, stp) => (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        zIndex: 1,\r\n      }}\r\n    >\r\n      <button\r\n        style={{\r\n          width: 30,\r\n          height: 30,\r\n          borderRadius: \"50%\",\r\n          textAlign: \"center\",\r\n          backgroundColor: stp == step ? color : \"#777\",\r\n          marginBottom: 5,\r\n        }}\r\n        onClick={() => setStep(stp)}\r\n      >\r\n        <FontAwesomeIcon icon={icon} color=\"#fff\" />\r\n      </button>\r\n      <span style={{ width: 90, textAlign: \"center\" }}>{title}</span>\r\n    </div>\r\n  );\r\n\r\n  const renderFormBody = (step) => {\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <>\r\n            <div className=\"field\">\r\n              <div className=\"select\">\r\n                <select>\r\n                  <option>Select Prefix</option>\r\n                  <option>Mr.</option>\r\n                  <option>Ms.</option>\r\n                  <option>Dr.</option>\r\n                  <option>Prof.</option>\r\n                </select>\r\n              </div>\r\n              {\"  \"}\r\n              <span style={{ color: \"red\" }}>*</span>\r\n            </div>\r\n            <div className=\"columns\">\r\n              <div className=\"column is-half\">\r\n                <div className=\"field\">\r\n                  <label className=\"label\">\r\n                    First Name <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n                  </label>\r\n                  <p className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"column\">\r\n                <div className=\"field\">\r\n                  <label className=\"label\">\r\n                    Last Name <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n                  </label>\r\n                  <p className=\"control\">\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                    />\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label className=\"label\">Degree</label>\r\n              <p className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"Degree\" />\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                Email <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input className=\"input\" type=\"email\" placeholder=\"Email\" />\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <p className=\"control is-expanded\">\r\n                <button className=\"button is-info\">Next</button>\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <>\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                Street # <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                  placeholder=\"Street No\"\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                ZipCode <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input className=\"input\" type=\"number\" placeholder=\"Zip Code\" />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                City <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"City\" />\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                Country <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <div class=\"select\">\r\n                <select>\r\n                  <option>Select Country</option>\r\n                  {countries.map((c) => (\r\n                    <option>{c}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      case 3:\r\n        return (\r\n          <>\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                Email <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onInputChange}\r\n                  required\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                Password <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={onInputChange}\r\n                  value={password}\r\n                  required\r\n                />\r\n              </p>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">\r\n                Confirm Password <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </label>\r\n              <p className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  name=\"cpassword\"\r\n                  value={cpassword}\r\n                  onChange={onInputChange}\r\n                  required\r\n                />\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: 50,\r\n        marginRight: \"30%\",\r\n        marginLeft: \"30%\",\r\n        padding: 35,\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: 20,\r\n      }}\r\n    >\r\n      <div className=\"title\">Register</div>\r\n\r\n      {/* Stepper*/}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-around\",\r\n          alignItems: \"center\",\r\n          position: \"relative\",\r\n          marginTop: 5,\r\n          marginBottom: 30,\r\n        }}\r\n      >\r\n        {renderStepperButton(\"Name\", \"hsl(204, 86%, 53%)\", fa1, 1)}\r\n        {renderStepperButton(\"Address\", \"hsl(204, 86%, 53%)\", fa2, 2)}\r\n        {renderStepperButton(\"ID/Password\", \"hsl(204, 86%, 53%)\", fa3, 3)}\r\n        <div\r\n          style={{\r\n            width: \"65%\",\r\n            height: 4,\r\n            backgroundColor: \"#000\",\r\n            position: \"absolute\",\r\n            top: \"25%\",\r\n            zIndex: 0,\r\n          }}\r\n        />\r\n      </div>\r\n      {error.length > 0 && (\r\n        <div className=\"notification is-danger is-light\">{error}</div>\r\n      )}\r\n      {success && (\r\n        <div class=\"notification is-success is-light\">\r\n          <button onClick={() => setSuccess(false)} class=\"delete\"></button>\r\n          Account has been successfully created!\r\n        </div>\r\n      )}\r\n\r\n      <form>\r\n        {renderFormBody(step)}\r\n        <div className=\"field\">\r\n          <p className=\"control is-expanded\">\r\n            <button\r\n              onClick={() => {\r\n                console.log(universities);\r\n              }}\r\n              disabled={loading}\r\n              className=\"button is-info\"\r\n            >\r\n              {step == 3 ? \"Register\" : \"Next\"}\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"field\" style={{ marginTop: 50 }}>\r\n        <p className=\"control\">\r\n          <span className=\"block\" style={{ alignSelf: \"flex-end\" }}>\r\n            Already have an account?{\" \"}\r\n            <Link to={{ pathname: \"/login\" }}>Login </Link>\r\n          </span>\r\n          instead.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useAuth } from \"../contexts/FirebaseContext\";\n\nfunction Home() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n\n  const queryString = window.location.search;\n\n  const urlParams = new URLSearchParams(queryString);\n\n  return (\n    <div className=\"container\">\n      {error.length > 0 && (\n        <div className=\"notification is-danger is-light\">{error}</div>\n      )}\n      {currentUser && (\n        <section className=\"hero is-fullheight has-text-centered\">\n          <div className=\"hero-body\">\n            {currentUser ? (\n              <div className=\"\">\n                <img src={urlParams.get(\"logo\")} alt=\"\" srcset=\"\" />\n                <div>{urlParams.get(\"name\")}</div>\n                <div>{urlParams.get(\"details\")}</div>\n                <p className=\"title\">\n                  You are all set now with your account you can start submission\n                  now by clicking button below\n                </p>\n                <Link to={{ pathname: \"/submit\" }}>\n                  <button className=\"button is-info\">Start Submission</button>\n                </Link>\n              </div>\n            ) : (\n              <div className=\"\">\n                <p className=\"title\">\n                  Looks Like you are not Logged into an account!\n                </p>\n                <p className=\"title\">First Login</p>\n              </div>\n            )}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n\n{\n  /*\n<div style={{ marginTop: 70, marginRight: 60 }}>\n        <h1 className=\"title\">Welcome to the submission site for</h1>\n        <p\n          className=\"subtitle\"\n          style={{ textTransform: \"capitalize\", marginTop: 15 }}\n        >\n          Emerald Emerging Markets Case Studies\n        </p>\n        <p>\n          To begin, log in with your user ID and password. If you are unsure\n          about whether or not you have an account, or have forgotten your\n          password, go to the Reset Password screen.\n        </p>\n        <p className=\"subtitle\" style={{ marginTop: 15 }}>\n          Need help? <a href=\"/\">click here</a>\n        </p>\n        <div>\n          With immediate effect all registered users require a validated ORCID\n          associated with their account.\n        </div>\n      </div>\n*/\n}\n","import React from \"react\";\n\nfunction ReviewAndSubmit({ form1Data, filesSelected, coverLetter }) {\n  return (\n    <div>\n      <div className=\"title\">ReviewAndSubmit</div>\n      <div class=\"box\">\n        <h3>{form1Data.title}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default ReviewAndSubmit;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faXmark,\n  fa1,\n  fa2,\n  fa3,\n  fa4,\n  faAdd,\n  faRemove,\n  faUpload,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CreatableSelect from \"react-select/creatable\";\nimport LoadingOverlay from \"react-loading-overlay\";\n\nimport { useAuth } from \"../contexts/FirebaseContext\";\nimport FileUploadTester from \"./FileUploadTester\";\nimport ReviewAndSubmit from \"./ReviewAndSubmit\";\n\nfunction MainForm() {\n  let navigate = useNavigate();\n\n  const [submissionType, setSubmissionType] = useState(\"asd\");\n\n  const [forms, setForms] = useState([\n    {\n      data: {\n        title: \"\",\n        abstract: \"\",\n        addMaterial: \"\",\n      },\n      errors: null,\n      isCompleted: false,\n    },\n    {\n      data: {},\n      errors: null,\n      isCompleted: false,\n    },\n    {\n      data: {},\n      errors: null,\n      isCompleted: false,\n    },\n    {\n      data: {},\n      errors: null,\n      isCompleted: false,\n    },\n  ]);\n\n  const [step, setStep] = useState(4);\n\n  const decideStepperButtonColor = (i) => {\n    return forms[i].isCompleted\n      ? \"green\"\n      : forms[i].errors === null\n      ? \"hsl(204, 86%, 53%)\"\n      : \"red\";\n  };\n  const decideStepperButtonIcon = (i) => {\n    let icon;\n    if (forms[i].isCompleted) {\n      icon = faCheck;\n    } else {\n      if (forms[i].errors === null) {\n        switch (i + 1) {\n          case 1:\n            icon = fa1;\n            break;\n          case 2:\n            icon = fa2;\n            break;\n          case 3:\n            icon = fa3;\n            break;\n          case 4:\n            icon = fa4;\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        icon = faXmark;\n      }\n    }\n    return icon;\n  };\n\n  const { currentUser } = useAuth();\n\n  const [author, setAuthor] = useState({\n    name: \"\",\n    email: \"\",\n    orcid: \"\",\n    institution: \"\",\n  });\n\n  const [authorsList, setAuthorsList] = useState([\n    {\n      name: \"Ahmed\",\n      email: currentUser.email,\n      orcid: \"1234-1234-1234-1234\",\n      institution: \"International Islamic University, Islamabad\",\n    },\n  ]);\n\n  const onInputChangeAuthor = (e) => {\n    setAuthor({ ...author, [e.target.name]: e.target.value });\n  };\n\n  const [options, setOptions] = useState([\n    { value: \"accounting\", label: \"Accounting\" },\n    { value: \"business history\", label: \"Business history\" },\n    { value: \"business law\", label: \"Business law\" },\n  ]);\n  const [addedKeywords, setAddedKeywords] = useState([]);\n  const [currentSelectVal, setCurrentSelectVal] = useState({\n    value: \"\",\n    label: \"Select Value\",\n  });\n  const [showKeywordsList, setShowKeywordsList] = useState(false);\n\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    cpassword: \"\",\n  });\n\n  const [toggleAuthorModal, setToggleAuthorModal] = useState(false);\n\n  const { email, password, cpassword } = state;\n\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const addErrorsToFormsState = (errs, step) => {\n    forms[step - 1] = {\n      ...forms[step - 1],\n      errors: errs,\n      isCompleted: false,\n    };\n    setForms([...forms]);\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  const setErrorsToNull = (step) => {\n    forms[step - 1] = {\n      ...forms[step - 1],\n      errors: null,\n      isCompleted: true,\n    };\n    setForms([...forms]);\n\n    setStep(step + 1);\n  };\n\n  async function handleSubmission(e) {\n    e.preventDefault();\n\n    // Check for errs\n\n    if (step !== 4) {\n      let errs = [];\n\n      switch (step) {\n        case 1:\n          if (forms[0].data.title < 50) {\n            errs.push(\"Title should be of minimum 50 characters\");\n          }\n          if (forms[0].data.abstract < 500) {\n            errs.push(\"Abstract should be of minimum 500 characters\");\n          }\n          if (addedKeywords.length < 3) {\n            errs.push(\"There should be minimum 3 keywords\");\n          }\n          if (errs.length != 0) {\n            addErrorsToFormsState(errs, step);\n          } else {\n            setErrorsToNull(step);\n          }\n          break;\n        case 2:\n          for (const f of filesSelected) {\n            if (f == \"\") {\n              errs.push(\"Please Upload at least 4 files!\");\n              break;\n            }\n          }\n          if (errs.length != 0) {\n            addErrorsToFormsState(errs, step);\n          } else {\n            setErrorsToNull(step);\n          }\n          break;\n        case 3:\n          if (coverLetter == \"\") {\n            errs.push(\"Please write the cover the letter!\");\n          }\n          if (!(isConfirmed1 && isConfirmed2 && isConfirmed3)) {\n            errs.push(\n              \"Please check all the confirmation statements given below!\"\n            );\n          }\n          if (errs.length != 0) {\n            addErrorsToFormsState(errs, step);\n          } else {\n            setErrorsToNull(step);\n          }\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      //submit paper\n    }\n  }\n\n  const handleInputs = (e, step) => {\n    forms[step - 1] = {\n      ...forms[step - 1],\n      data: {\n        ...forms[step - 1].data,\n        [e.target.name]: e.target.value,\n      },\n    };\n    setForms([...forms]);\n  };\n\n  const renderStepperButton = (title, color, icon, stp) => (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        zIndex: 1,\n      }}\n    >\n      <button\n        style={{\n          width: 30,\n          cursor: \"pointer\",\n          height: 30,\n          borderRadius: \"50%\",\n          textAlign: \"center\",\n          backgroundColor:\n            stp == step\n              ? \"hsl(204, 86%, 53%)\"\n              : forms[stp - 1].isCompleted\n              ? \"green\"\n              : color === \"red\"\n              ? color\n              : \"#777\",\n          marginBottom: 5,\n        }}\n        onClick={() => setStep(stp)}\n      >\n        <FontAwesomeIcon icon={icon} color=\"#fff\" />\n      </button>\n      <span style={{ width: 200, textAlign: \"center\" }}>{title}</span>\n    </div>\n  );\n\n  // Form Step 2 states\n  const [fileTypeSelect, setFileTypeSelect] = useState([\"\", \"\", \"\", \"\"]);\n  const [filesSelected, setFilesSelected] = useState(new Array(4).fill(\"\"));\n  const [fileUploadLoading, setFileUploadLoading] = useState(false);\n\n  const checkIfAllFilesSelected = () => {\n    for (const element of filesSelected) {\n      if (element == \"\") return false;\n    }\n    return true;\n  };\n\n  const [progress, setProgress] = useState(0);\n  const [url, setURL] = useState(\"\");\n\n  const handleFiles = (e) => {\n    e.preventDefault();\n\n    let files = [];\n    if (e.target.name === \"resume\") {\n      console.log(e.target.file);\n    }\n  };\n\n  // const uploadFile = (file) => {\n  //   if (!file) return;\n\n  //   const storageRef = ref(storage, `/files/${file.name}`);\n  //   const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //   uploadTask.on(\n  //     \"state_changed\",\n  //     (snapshot) => {\n  //       const prog = Math.round(\n  //         (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n  //       );\n  //       setProgress(prog);\n  //     },\n  //     (err) => console.log(err),\n  //     () => {\n  //       getDownloadURL(uploadTask.snapshot.ref).then((u) => setURL(u));\n  //       console.log(url);\n  //     }\n  //   );\n\n  //   return { url, progress };\n  // };\n\n  const getFormattedTimeDate = () => {\n    var today = new Date();\n    var date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate() +\n      \"(\" +\n      today.getHours() +\n      \":\" +\n      today.getMinutes() +\n      \")\";\n    return date;\n  };\n\n  // Form 3 states\n  const [toggleFundingModal, setToggleFundingModal] = useState(false);\n\n  const [funder, setFunder] = useState({\n    findfunder: \"\",\n    grantrecep: \"\",\n    awardnumber: 0,\n  });\n\n  const [fundersList, setFundersList] = useState([\n    {\n      findfunder: \"Ahmed\",\n      grantrecep: \"Mudud\",\n      awardnumber: 12345,\n    },\n  ]);\n\n  const [coverLetter, setCoverLetter] = useState(\"\");\n\n  const [isConfirmed1, setIsConfirmed1] = useState(false);\n  const [isConfirmed2, setIsConfirmed2] = useState(false);\n  const [isConfirmed3, setIsConfirmed3] = useState(false);\n\n  const onInputChangeFunder = (e) => {\n    setFunder({ ...funder, [e.target.name]: e.target.value });\n  };\n\n  ////////////---------///////////\n\n  const renderFormBody = (step) => {\n    switch (step) {\n      case 1:\n        return (\n          <div className=\"\" id=\"form1\">\n            <div className=\"field\">\n              <label className=\"label\">\n                Title <span style={{ color: \"red\" }}>*</span>\n              </label>\n              {forms[step - 1].data.title.length < 50 ? (\n                <span\n                  style={{\n                    backgroundColor: \"red\",\n                    color: \"#fff\",\n                    paddingLeft: 4,\n                    paddingRight: 4,\n                    borderRadius: 5,\n                  }}\n                >\n                  Title should be of minimum 50 characters\n                </span>\n              ) : (\n                <span\n                  style={{\n                    backgroundColor: \"green\",\n                    color: \"#fff\",\n                    paddingLeft: 4,\n                    paddingRight: 4,\n                    borderRadius: 5,\n                  }}\n                >\n                  Your title is fine!\n                </span>\n              )}\n\n              {forms[step - 1].data.title.length < 50 ? (\n                <p className=\"control\">\n                  <textarea\n                    className=\"textarea is-danger\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    rows=\"4\"\n                    name=\"title\"\n                    value={forms[step - 1].data.title}\n                    onChange={(e) => {\n                      handleInputs(e, step);\n                    }}\n                  />\n                </p>\n              ) : (\n                <p className=\"control\">\n                  <textarea\n                    className=\"textarea is-success\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    rows=\"4\"\n                    name=\"title\"\n                    value={forms[step - 1].data.title}\n                    onChange={(e) => {\n                      handleInputs(e, step);\n                    }}\n                  />\n                </p>\n              )}\n            </div>\n\n            {/* ABSTRACT */}\n            <div className=\"field\">\n              <label className=\"label\">\n                Abstract <span style={{ color: \"red\" }}>*</span>\n              </label>\n\n              {forms[step - 1].data.abstract.length < 500 ? (\n                <span\n                  style={{\n                    backgroundColor: \"red\",\n                    color: \"#fff\",\n                    paddingLeft: 4,\n                    paddingRight: 4,\n                    borderRadius: 5,\n                  }}\n                >\n                  Abstract should be of minimum 500 characters\n                </span>\n              ) : (\n                <span\n                  style={{\n                    backgroundColor: \"green\",\n                    color: \"#fff\",\n                    paddingLeft: 4,\n                    paddingRight: 4,\n                    borderRadius: 5,\n                  }}\n                >\n                  Your Abstract is fine!\n                </span>\n              )}\n\n              {forms[step - 1].data.abstract.length < 500 ? (\n                <p className=\"control\">\n                  <textarea\n                    className=\"textarea is-danger\"\n                    type=\"text\"\n                    placeholder=\"Abstract\"\n                    rows=\"8\"\n                    name=\"abstract\"\n                    value={forms[step - 1].data.abstract}\n                    onChange={(e) => {\n                      handleInputs(e, step);\n                    }}\n                  />\n                </p>\n              ) : (\n                <p className=\"control\">\n                  <textarea\n                    className=\"textarea is-success\"\n                    type=\"text\"\n                    placeholder=\"Abstract\"\n                    rows=\"8\"\n                    name=\"abstract\"\n                    value={forms[step - 1].data.abstract}\n                    onChange={(e) => {\n                      handleInputs(e, step);\n                    }}\n                  />\n                </p>\n              )}\n            </div>\n\n            {/* Additional Material */}\n            <div className=\"field\">\n              <label className=\"label\">Additional Material</label>\n\n              <p className=\"control\">\n                <textarea\n                  className=\"textarea\"\n                  type=\"text\"\n                  placeholder=\"Additional Material\"\n                  rows=\"3\"\n                  name=\"addMaterial\"\n                  value={forms[step - 1].data.addMaterial}\n                  onChange={(e) => {\n                    handleInputs(e, step);\n                  }}\n                />\n              </p>\n            </div>\n\n            {/* Keywords */}\n            <label className=\"label\">\n              Keywords<span style={{ color: \"red\" }}>*</span>\n            </label>\n\n            <span\n              style={{\n                backgroundColor:\n                  addedKeywords.length < 3 || addedKeywords.length > 5\n                    ? \"red\"\n                    : \"green\",\n                color: \"#fff\",\n                paddingLeft: 4,\n                paddingRight: 4,\n                borderRadius: 5,\n              }}\n            >\n              Min. 3, Max 5\n            </span>\n            <div className=\"block\">\n              <CreatableSelect\n                placeholder=\"Select Keyword\"\n                isDisabled={addedKeywords.length > 4 ? true : false}\n                options={options}\n                value={currentSelectVal}\n                onChange={(item) => setCurrentSelectVal(item)}\n                onCreateOption={(newValue) => {\n                  newValue.split(/,+|,\\s+/g).forEach((item) => {\n                    addedKeywords.push({\n                      value: item,\n                      label: item.charAt(0).toUpperCase() + item.slice(1),\n                    });\n                  });\n\n                  setAddedKeywords([...addedKeywords]);\n                }}\n              />\n            </div>\n            <div className=\"block\">\n              {\" \"}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <p className=\"control\"></p>\n\n                <button\n                  onClick={() => {\n                    if (currentSelectVal.value != \"\")\n                      addedKeywords.push(currentSelectVal);\n                    setAddedKeywords([...addedKeywords]);\n                    setCurrentSelectVal({\n                      value: \"\",\n                      label: \"Select Value\",\n                    });\n                    setOptions(\n                      options.filter(function (el) {\n                        return el.value != currentSelectVal.value;\n                      })\n                    );\n                  }}\n                  className=\"button is-info\"\n                >\n                  <FontAwesomeIcon icon={faAdd} />\n                  <span style={{ marginLeft: 5 }}>Add Keyword</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"field\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <p className=\"card-header-title\">Keywords</p>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"content\">\n                    {addedKeywords.length == 0 && (\n                      <div className=\"has-text-centered\">No keywords added</div>\n                    )}\n                    {addedKeywords.map((keyword) => (\n                      <div\n                        key={keyword.value}\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          paddingRight: 10,\n                          paddingLeft: 10,\n                          height: 50,\n                          borderBottom: \"1px solid #ccc\",\n                        }}\n                      >\n                        <div style={{ fontWeight: \"600\" }}>{keyword.label}</div>\n                        <button\n                          onClick={() => {\n                            options.push(keyword);\n                            setOptions([...options]);\n\n                            setAddedKeywords(\n                              addedKeywords.filter(function (el) {\n                                return el.value != keyword.value;\n                              })\n                            );\n                          }}\n                          className=\"button is-danger is-round is-small\"\n                        >\n                          <FontAwesomeIcon color=\"white\" icon={faRemove} />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\" />\n\n            {/* Add Author  */}\n            <label className=\"label\">Authors</label>\n            {/* Modals */}\n            {toggleAuthorModal && (\n              <div className=\"modal is-active is-clipped\">\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-card\">\n                  <header className=\"modal-card-head px-6\">\n                    <p className=\"modal-card-title\">Add Author</p>\n                    <button\n                      onClick={() => setToggleAuthorModal(false)}\n                      className=\"delete\"\n                      aria-label=\"close\"\n                    ></button>\n                  </header>\n                  <section className=\"modal-card-body\">\n                    <div className=\"field is-horizontal\">\n                      {/* Author Name */}\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">Name</label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"text\"\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              value={author.name}\n                              onChange={onInputChangeAuthor}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Author Email */}\n                    <div className=\"field is-horizontal\">\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">Email</label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"text\"\n                              placeholder=\"Email\"\n                              name=\"email\"\n                              value={author.email}\n                              onChange={onInputChangeAuthor}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Author ORCID */}\n                    <div className=\"field is-horizontal\">\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">ORCID</label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"text\"\n                              placeholder=\"ORCID with dashes\"\n                              name=\"orcid\"\n                              value={author.orcid}\n                              onChange={onInputChangeAuthor}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Author Institution */}\n                    <div className=\"field is-horizontal\">\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">Institution</label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"text\"\n                              placeholder=\"Institution\"\n                              name=\"institution\"\n                              value={author.institution}\n                              onChange={onInputChangeAuthor}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                  <footer className=\"modal-card-foot\">\n                    <button\n                      onClick={() => {\n                        authorsList.push(author);\n                        setAuthorsList(authorsList);\n                        setToggleAuthorModal(false);\n                      }}\n                      className=\"button is-info\"\n                    >\n                      Add Author\n                    </button>\n                    <button\n                      onClick={() => setToggleAuthorModal(false)}\n                      className=\"button\"\n                    >\n                      Cancel\n                    </button>\n                  </footer>\n                </div>\n              </div>\n            )}\n\n            {/* Author Button */}\n            <div className=\"field\">\n              <button\n                onClick={() => setToggleAuthorModal(true)}\n                className=\"button is-info\"\n              >\n                <FontAwesomeIcon icon={faAdd} />\n                <span style={{ marginLeft: 5 }}>Add Author</span>\n              </button>\n            </div>\n            <div className=\"block\" />\n\n            {/* Authors Table */}\n            <table className=\"table is-striped is-hoverable\">\n              <thead>\n                <tr>\n                  <th>Serial No</th>\n                  <th>Author</th>\n                  <th>ORCID</th>\n                  <th>Institution</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tfoot>\n                <tr></tr>\n              </tfoot>\n              <tbody>\n                {authorsList.length == 0 && (\n                  <td className=\"has-text-centered\">No Authors added</td>\n                )}\n                {authorsList.map((a) => (\n                  <tr key={a.orcid}>\n                    <td>{a.name}</td>\n                    <td>{a.email}</td>\n                    <td>{a.orcid}</td>\n                    <td>{a.institution}</td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          if (\n                            window.confirm(\n                              `Are you sure to delete author named ${a.name}?`\n                            )\n                          ) {\n                            setAuthorsList(\n                              authorsList.filter(function (el) {\n                                return el.orcid != a.orcid;\n                              })\n                            );\n                          }\n                        }}\n                        className=\"button is-danger is-round is-small\"\n                      >\n                        <FontAwesomeIcon color=\"white\" icon={faRemove} />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <div className=\"block\" />\n          </div>\n        );\n\n      case 2:\n        return (\n          <div className=\"form2\">\n            {/* Upload Files */}\n\n            {/* Pick Files */}\n            <form onSubmit={handleFiles}>\n              <label className=\"label\">\n                Pick Files<span style={{ color: \"red\" }}>*</span>\n              </label>\n              <table className=\"table is-striped is-hoverable\">\n                <thead>\n                  <tr>\n                    <th>File Type</th>\n                    <th>File</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {filesSelected.map((_, i) => (\n                    <tr key={i}>\n                      <td>\n                        <div className=\"select\">\n                          <select\n                            value={fileTypeSelect[i]}\n                            onChange={(e) => {\n                              if (e.target.value == \"Select File Type\") {\n                                fileTypeSelect[i] = \"\";\n                                setFileTypeSelect([...fileTypeSelect]);\n                              } else {\n                                fileTypeSelect[i] = e.target.value;\n                                setFileTypeSelect([...fileTypeSelect]);\n                              }\n                            }}\n                            disabled={filesSelected[i] != \"\" ? true : false}\n                          >\n                            <option>Select File Type</option>\n                            <option value=\"Title Page\">Title Page</option>\n                            <option>Article File</option>\n                            <option>Figure</option>\n                            <option>Table</option>\n                            <option>Author Biography</option>\n                            <option>Suplementary File not for Review</option>\n                          </select>\n                        </div>\n                      </td>\n                      <td>\n                        {fileTypeSelect[i] != \"\" &&\n                          (filesSelected[i] == \"\" ? (\n                            <div className=\"file has-name\">\n                              <label className=\"file-label\">\n                                <input\n                                  className=\"file-input\"\n                                  type=\"file\"\n                                  name=\"resume\"\n                                  accept=\".*\"\n                                  value={filesSelected[i]}\n                                  onChange={(e) => {\n                                    filesSelected[i] = e.target.value;\n                                    setFilesSelected([...filesSelected]);\n                                  }}\n                                />\n                                <span className=\"file-cta\">\n                                  <span className=\"file-icon\">\n                                    <FontAwesomeIcon\n                                      color=\"black\"\n                                      icon={faUpload}\n                                    />\n                                  </span>\n                                  <span className=\"file-label\">\n                                    Choose a file…\n                                  </span>\n                                </span>\n                                <span className=\"file-name\">\n                                  {filesSelected[i]}\n                                </span>\n                              </label>\n                            </div>\n                          ) : (\n                            <div className=\"file has-name is-success\">\n                              <label className=\"file-label\">\n                                <input\n                                  className=\"file-input\"\n                                  type=\"file\"\n                                  name=\"resume\"\n                                  accept=\".*\"\n                                  value={filesSelected[i]}\n                                  onChange={(e) => {\n                                    console.log(e.target.files);\n                                    filesSelected[i] = e.target.value;\n                                    setFilesSelected([...filesSelected]);\n                                  }}\n                                />\n                                <span className=\"file-cta\">\n                                  <span className=\"file-icon\">\n                                    <FontAwesomeIcon\n                                      color=\"white\"\n                                      icon={faUpload}\n                                    />\n                                  </span>\n                                  <span className=\"file-label\">\n                                    Change file…\n                                  </span>\n                                </span>\n                                <span className=\"file-name\">\n                                  {filesSelected[i]}\n                                </span>\n                              </label>\n                            </div>\n                          ))}\n                      </td>\n                      <td>\n                        {filesSelected[i] != \"\" && (\n                          <button\n                            onClick={() => {\n                              if (\n                                window.confirm(\n                                  `Are you sure to remove file named ${filesSelected[i]}?`\n                                )\n                              ) {\n                                filesSelected[i] = \"\";\n                                setFileTypeSelect[i] = \"\";\n                                setFilesSelected([...filesSelected]);\n                              }\n                            }}\n                            className=\"button is-danger is-round is-small\"\n                          >\n                            <FontAwesomeIcon color=\"white\" icon={faRemove} />\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n\n              {/* Upload Button */}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <button\n                  disabled={checkIfAllFilesSelected() ? false : true}\n                  className=\"button is-info\"\n                  type=\"submit\"\n                >\n                  <span className=\"icon is-small\">\n                    <FontAwesomeIcon color=\"white\" icon={faUpload} />\n                  </span>\n                  <span>Upload Selected Files</span>\n                </button>\n              </div>\n              <div className=\"block\" />\n            </form>\n\n            {/* Uploaded Files Table */}\n            <label className=\"label\">\n              Uploaded Files\n              <span\n                style={{\n                  marginLeft: 5,\n                  padding: 3,\n                  backgroundColor: \"green\",\n                  borderRadius: 5,\n                }}\n              >\n                <FontAwesomeIcon color=\"white\" icon={faCheck} size=\"1x\" />\n              </span>\n            </label>\n            <table className=\"table is-striped is-hoverable\">\n              <thead>\n                <tr>\n                  <th>File Name</th>\n                  <th>File Type</th>\n                  <th>Upload Time</th>\n                  <th>Uploaded By</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {/* {fundersList.length == 0 && (\n                  <td className=\"has-text-centered\">No funders added</td>\n                )} */}\n                <tr>\n                  <td>Screenshot from 2022-03-11 11-28-19.png</td>\n                  <td>Title Page</td>\n                  <td>{getFormattedTimeDate()}</td>\n                  <td>Ahmed Khan</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        if (\n                          window.confirm(`Are you sure to delete author named?`)\n                        ) {\n                          // setAuthorsList(\n                          //   authorsList.filter(function (el) {\n                          //     return el.orcid != a.orcid;\n                          //   })\n                          // );\n                        }\n                      }}\n                      className=\"button is-danger is-round is-small\"\n                    >\n                      <FontAwesomeIcon color=\"white\" icon={faRemove} />\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"block\" />\n          </div>\n        );\n      case 3:\n        return (\n          <div className=\"form3\">\n            {/* Cover Letter */}\n            <div className=\"field\">\n              <label className=\"label\">\n                Cover Letter <span style={{ color: \"red\" }}>*</span>\n              </label>\n\n              {coverLetter === \"\" ? (\n                <p className=\"control\">\n                  <textarea\n                    className=\"textarea is-danger\"\n                    type=\"text\"\n                    placeholder=\"Cover Letter\"\n                    rows=\"5\"\n                    value={coverLetter}\n                    onChange={(e) => setCoverLetter(e.target.value)}\n                  />\n                </p>\n              ) : (\n                <p className=\"control\">\n                  <textarea\n                    className=\"textarea is-success\"\n                    type=\"text\"\n                    placeholder=\"Cover Letter\"\n                    rows=\"5\"\n                    value={coverLetter}\n                    onChange={(e) => setCoverLetter(e.target.value)}\n                  />\n                </p>\n              )}\n            </div>\n\n            {/* Funding */}\n\n            {/* Add Funding  */}\n            <label className=\"label\">\n              Add Funding<span style={{ color: \"red\" }}>*</span>\n            </label>\n            {/* Modals */}\n            {toggleFundingModal && (\n              <div className=\"modal is-active is-clipped\">\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-card\">\n                  <header className=\"modal-card-head px-6\">\n                    <p className=\"modal-card-title\">Add Funding</p>\n                    <button\n                      onClick={() => setToggleFundingModal(false)}\n                      className=\"delete\"\n                      aria-label=\"close\"\n                    ></button>\n                  </header>\n                  <section className=\"modal-card-body\">\n                    <div className=\"field is-horizontal\">\n                      {/* Find a Funder */}\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">Find a Funder</label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"text\"\n                              placeholder=\"Find a Funder\"\n                              name=\"findfunder\"\n                              value={funder.findfunder}\n                              onChange={onInputChangeFunder}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Award Number */}\n                    <div className=\"field is-horizontal\">\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">Award Number </label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"number\"\n                              placeholder=\"Award Number \"\n                              name=\"awardnumber\"\n                              value={funder.awardnumber}\n                              onChange={onInputChangeFunder}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Grant Recepient  */}\n                    <div className=\"field is-horizontal\">\n                      <div className=\"field-label is-normal\">\n                        <label className=\"label\">Grant Recepient</label>\n                      </div>\n                      <div className=\"field-body\">\n                        <div className=\"field\">\n                          <div className=\"control\">\n                            <input\n                              className=\"input\"\n                              type=\"text\"\n                              placeholder=\"Grant Recepient\"\n                              name=\"grantrecep\"\n                              value={funder.grantrecep}\n                              onChange={onInputChangeFunder}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                  <footer className=\"modal-card-foot\">\n                    <button\n                      onClick={() => {\n                        fundersList.push(funder);\n                        setFundersList(fundersList);\n                        setToggleFundingModal(false);\n                      }}\n                      className=\"button is-info\"\n                    >\n                      Add Funder\n                    </button>\n                    <button\n                      onClick={() => setToggleFundingModal(false)}\n                      className=\"button\"\n                    >\n                      Cancel\n                    </button>\n                  </footer>\n                </div>\n              </div>\n            )}\n\n            {/* Funders Button */}\n            <div className=\"field\">\n              <button\n                onClick={() => setToggleFundingModal(true)}\n                className=\"button is-info\"\n              >\n                <FontAwesomeIcon icon={faAdd} />\n                <span style={{ marginLeft: 5 }}>Add Funder</span>\n              </button>\n            </div>\n            <div className=\"block\" />\n\n            {/* Funders Table */}\n            <table className=\"table is-striped is-hoverable\">\n              <thead>\n                <tr>\n                  <th>Funder</th>\n                  <th>Award Number</th>\n                  <th>Grant Recepient</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tfoot>\n                <tr></tr>\n              </tfoot>\n              <tbody>\n                {fundersList.length == 0 && (\n                  <td className=\"has-text-centered\">No funders added</td>\n                )}\n                {fundersList.map((f) => (\n                  <tr>\n                    <td>{f.findfunder}</td>\n                    <td>{f.awardnumber}</td>\n                    <td>{f.grantrecep}</td>\n                    <td>\n                      <button\n                        onClick={() => {\n                          if (\n                            window.confirm(\n                              `Are you sure to delete funder named ${f.findfunder}?`\n                            )\n                          ) {\n                            setFundersList(\n                              fundersList.filter(function (el) {\n                                return el.awardnumber != f.awardnumber;\n                              })\n                            );\n                          }\n                        }}\n                        className=\"button is-danger is-round is-small\"\n                      >\n                        <FontAwesomeIcon color=\"white\" icon={faRemove} />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <div className=\"block\" />\n\n            {/* Cofirmation */}\n            <div className=\"field\">\n              <label className=\"label\">\n                <strong>Confirm the following:</strong>\n              </label>\n              <div className=\"block\" />\n\n              <label class=\"checkbox\">\n                <input\n                  checked={isConfirmed1}\n                  type=\"checkbox\"\n                  onChange={() => setIsConfirmed1(!isConfirmed1)}\n                />\n                <span style={{ color: \"red\", marginLeft: 5 }}>*</span>\n                Confirm that the manuscript has been submitted solely to this\n                journal and is not published, in press, or submitted elsewhere.\n              </label>\n              <div className=\"block\" />\n\n              <label class=\"checkbox\">\n                <input\n                  checked={isConfirmed2}\n                  type=\"checkbox\"\n                  onChange={() => setIsConfirmed2(!isConfirmed2)}\n                />\n                <span style={{ color: \"red\", marginLeft: 5 }}>*</span>\n                Confirm that all the research meets the ethical guidelines,\n                including adherence to the legal requirements of the study\n                country.\n              </label>\n              <div className=\"block\" />\n\n              <label class=\"checkbox\">\n                <input\n                  checked={isConfirmed3}\n                  type=\"checkbox\"\n                  onChange={() => setIsConfirmed3(!isConfirmed3)}\n                />\n                <span style={{ color: \"red\", marginLeft: 5 }}>*</span>\n                Confirm that you have prepared a complete text within the\n                anonymous article file. Any identifying information has been\n                included separately in a title page, acknowledgements or\n                supplementary file not for review, to allow blinded review.\n              </label>\n            </div>\n            <div className=\"block\" />\n          </div>\n        );\n      case 4:\n        return (\n          <ReviewAndSubmit\n            form1Data={forms[0].data}\n            addedKeywords={addedKeywords}\n            authorsList={authorsList}\n            filesSelected={filesSelected}\n            fundersList={fundersList}\n            coverLetter={coverLetter}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      {/* Loading Modal Wrapper */}\n      <LoadingOverlay\n        active={fileUploadLoading}\n        spinner\n        text=\"Upload files please wait a bit...\"\n      >\n        <div\n          style={{\n            marginTop: 50,\n            marginRight: \"10%\",\n            marginLeft: \"10%\",\n            padding: 35,\n            border: \"1px solid #ccc\",\n            borderRadius: 20,\n            paddingBottom: submissionType == \"\" ? 200 : 20,\n          }}\n        >\n          <div className=\"title\">Submission</div>\n\n          {/* Submission Category */}\n          {submissionType == \"\" ? (\n            <>\n              <div className=\"subtitle\">\n                Please choose a category for your paper.\n              </div>\n              <div className=\"select\">\n                <select\n                  value={submissionType}\n                  onChange={(e) => {\n                    if (e.target.value == \"Select Submission Type\") {\n                      setSubmissionType(\"\");\n                    } else {\n                      setSubmissionType(e.target.value);\n                    }\n                  }}\n                  disabled={submissionType != \"\" ? true : false}\n                >\n                  <option>Select Submission Type</option>\n                  <option>Case Study</option>\n                  <option>Research Paper</option>\n                  <option>Technical Paper</option>\n                  <option>Select Submission Type</option>\n                </select>\n              </div>\n            </>\n          ) : (\n            <>\n              {/* Stepper*/}\n              <div className=\"subtitle\">{submissionType}</div>\n              {/* <FileUploadTester /> */}\n              {/* Errors Notification */}\n              {forms[step - 1].errors != null && (\n                <div class=\"notification is-danger is-light pl-6\">\n                  <div className=\"subtitle\">Errors:</div>\n                  <ul style={{ listStyleType: \"disc\" }}>\n                    {forms[step - 1].errors.map((e) => (\n                      <li>\n                        <strong>{e}</strong>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  position: \"relative\",\n                  marginTop: 5,\n                  marginBottom: 30,\n                }}\n              >\n                {renderStepperButton(\n                  \"Metadata\",\n                  decideStepperButtonColor(0),\n                  decideStepperButtonIcon(0),\n                  1\n                )}\n                {renderStepperButton(\n                  \"Upload Files\",\n                  decideStepperButtonColor(1),\n                  decideStepperButtonIcon(1),\n                  2\n                )}\n                {renderStepperButton(\n                  \"Details & Comments\",\n                  decideStepperButtonColor(2),\n                  decideStepperButtonIcon(2),\n                  3\n                )}\n                {renderStepperButton(\n                  \"Review Your Submission\",\n                  decideStepperButtonColor(3),\n                  decideStepperButtonIcon(3),\n                  4\n                )}\n\n                <div\n                  style={{\n                    width: \"75%\",\n                    height: 4,\n                    backgroundColor: \"#000\",\n                    position: \"absolute\",\n                    top: \"25%\",\n                    zIndex: 0,\n                  }}\n                />\n              </div>\n              {error.length > 0 && (\n                <div className=\"notification is-danger is-light\">{error}</div>\n              )}\n\n              {renderFormBody(step)}\n              <div className=\"block\" />\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: 35,\n                }}\n              >\n                <button\n                  onClick={() => {\n                    if (\n                      window.confirm(\n                        `Are you sure to leave? Entered data will be lost!`\n                      )\n                    ) {\n                      navigate(\"/\");\n                    }\n                  }}\n                  className=\"button is-light\"\n                >\n                  Cancel\n                </button>\n                <button\n                  style={{ marginLeft: 5 }}\n                  onClick={() => {\n                    if (\n                      window.confirm(`Are you sure to leave and save data?`)\n                    ) {\n                      navigate(\"/\");\n                    }\n                  }}\n                  className=\"button is-info is-light\"\n                >\n                  Save Progress & Leave\n                </button>\n                <button\n                  style={{ marginLeft: 5 }}\n                  onClick={handleSubmission}\n                  disabled={loading}\n                  className=\"button is-info is-right\"\n                >\n                  {step == 4 ? \"Submit Paper\" : \"Next\"}\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      </LoadingOverlay>\n    </>\n  );\n}\n\nexport default MainForm;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\nimport Home from \"../components/Home\";\r\nimport MainForm from \"../components/MainForm\";\r\n\r\nfunction WelcomePage() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/submit\" element={<MainForm />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport WelcomePage from \"./WelcomePage\";\nimport { FirebaseProvider } from \"../contexts/FirebaseContext\";\n\nimport \"bulma/css/bulma.css\";\nimport \"@fortawesome/fontawesome-svg-core\";\nimport \"@fortawesome/free-solid-svg-icons\";\nimport \"@fortawesome/react-fontawesome\";\n\nfunction App() {\n  return (\n    <div>\n      <FirebaseProvider>\n        <Header />\n        <WelcomePage />\n        <Footer />\n      </FirebaseProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}